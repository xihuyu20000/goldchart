/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const $chart: typeof import('@/utils/http.ts')['$chart']
  const $post: typeof import('@/utils/http.ts')['$post']
  const $upload: typeof import('@/utils/http.ts')['$upload']
  const *: typeof import('@/utils/utils.ts')
  const .: typeof import('from')['.']
  const /: typeof import('from')['/']
  const @: typeof import('from')['@']
  const EffectScope: typeof import('vue')['EffectScope']
  const Guard: typeof import('@/utils/guard.ts')['Guard']
  const StorageKeys: typeof import('@/utils/utils.ts')['StorageKeys']
  const a: typeof import('from')['a']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const b: typeof import('from')['b']
  const c: typeof import('from')['c']
  const chart_menu_configs: typeof import('@/utils/menu.ts')['chart_menu_configs']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defaultExportedFunction: typeof import('defaults')['defaultExportedFunction']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const e: typeof import('from')['e']
  const echartOptionColor: typeof import('@/utils/utils.ts')['echartOptionColor']
  const echartOptionGradientColor: typeof import('@/utils/utils.ts')['echartOptionGradientColor']
  const echartOptionLabelPositions: typeof import('@/utils/utils.ts')['echartOptionLabelPositions']
  const effectScope: typeof import('vue')['effectScope']
  const emitter: typeof import('@/utils/bus.ts')['emitter']
  const empty: typeof import('@/utils/utils.ts')['empty']
  const f: typeof import('from')['f']
  const g: typeof import('from')['g']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getLocalItem: typeof import('@/utils/utils.ts')['getLocalItem']
  const getType: typeof import('@/utils/utils.ts')['getType']
  const get_options: typeof import('@/utils/optionfactory.ts')['get_options']
  const guard: typeof import('@/utils/guard.ts')['guard']
  const h: typeof import('vue')['h']
  const i: typeof import('from')['i']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const l: typeof import('from')['l']
  const logger: typeof import('@/utils/logger.ts')['logger']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const menu: typeof import('@/utils/menu.ts')['menu']
  const n: typeof import('from')['n']
  const nextTick: typeof import('vue')['nextTick']
  const o: typeof import('from')['o']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const p: typeof import('from')['p']
  const provide: typeof import('vue')['provide']
  const r: typeof import('from')['r']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const s: typeof import('from')['s']
  const seriesBarItemStyleBorderTypes: typeof import('@/utils/utils.ts')['seriesBarItemStyleBorderTypes']
  const seriesLineStyleTypes: typeof import('@/utils/utils.ts')['seriesLineStyleTypes']
  const seriesSymbols: typeof import('@/utils/utils.ts')['seriesSymbols']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setLocalItem: typeof import('@/utils/utils.ts')['setLocalItem']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const space_menu_configs: typeof import('@/utils/menu.ts')['space_menu_configs']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const t: typeof import('from')['t']
  const titleTextStyleFontFamilies: typeof import('@/utils/utils.ts')['titleTextStyleFontFamilies']
  const titleXAxisNameLocations: typeof import('@/utils/utils.ts')['titleXAxisNameLocations']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const u: typeof import('from')['u']
  const uid: typeof import('@/utils/utils.ts')['uid']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useGlobalStore: typeof import('@/utils/global.ts')['useGlobalStore']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useModel: typeof import('vue')['useModel']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const utils: typeof import('@/utils/utils.ts')['utils']
  const utils.utils: typeof import('@/utils/utils.ts')['utils.utils']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const xAxisNameLocations: typeof import('@/utils/utils.ts')['xAxisNameLocations']
  const y: typeof import('from')['y']
  const yAxisNameLocations: typeof import('@/utils/utils.ts')['yAxisNameLocations']
  const zip: typeof import('@/utils/utils.ts')['zip']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
